{"name":"Open-ocr","tagline":"Open source OCR-as-a-Service using Tesseract and Docker","body":"\r\nOpenOCR makes it simple to host your own OCR REST API.\r\n\r\nThe heavy lifting OCR work is handled by [Tesseract OCR](https://code.google.com/p/tesseract-ocr/).\r\n\r\n[Docker](http://www.docker.io) is used to containerize the various components of the service.\r\n\r\n![screenshot](http://tleyden-misc.s3.amazonaws.com/blog_images/openocr-architecture.png)\r\n\r\n# Launching OpenOCR on Orchard\r\n\r\nThere are several [docker](http://www.docker.io) PAAS platforms available, and OpenOCR should work on all of them.  The following instructions are geared towards [Orchard](http://www.orchardup.com), but should be easily adaptable to other platforms.\r\n\r\n## Install Orchard CLI tool\r\n\r\nSee the [Orchard Getting Started Guide](https://www.orchardup.com/docs)\r\nfor instructions on signing up and installing their CLI management tool.\r\n\r\n## Find out your orchard host\r\n\r\n```\r\n$ orchard hosts\r\nNAME                SIZE                IP\r\ndefault             512M                107.170.72.189\r\n```\r\n\r\nThe ip address `107.170.72.189` will be used as the `ORCHARD_HOST` env variable below.\r\n\r\n## Launch docker images\r\n\r\nHere's how to launch the docker images needed for OpenOCR.\r\n\r\n```\r\n$ curl -O https://raw.githubusercontent.com/tleyden/open-ocr/master/launcher/launcher.sh\r\n$ export ORCHARD_HOST=107.170.72.189 RABBITMQ_PASS=supersecret2 HTTP_PORT=8080\r\n$ chmod +x launcher.sh\r\n$ ./launcher.sh\r\n```\r\n\r\nThis will start three docker instances:\r\n\r\n* [RabbitMQ](https://index.docker.io/u/tutum/rabbitmq/)\r\n* [OpenOCR Worker](https://index.docker.io/u/tleyden5iwx/open-ocr/)\r\n* [OpenOCR HTTP API Server](https://index.docker.io/u/tleyden5iwx/open-ocr/)\r\n\r\nYou are now ready to decode images -> text via your REST API.\r\n\r\n# Test the REST API \r\n\r\n**Request**\r\n\r\n```\r\n$ curl -X POST -H \"Content-Type: application/json\" -d '{\"img_url\":\"http://bit.ly/ocrimage\",\"engine\":\"tesseract\"}' http://$ORCHARD_HOST:$HTTP_PORT/ocr\r\n```\r\n\r\n**Response**\r\n\r\nIt will return the decoded text for the [test image](http://bit.ly/ocrimage):\r\n\r\n```\r\n< HTTP/1.1 200 OK\r\n< Date: Tue, 13 May 2014 16:18:50 GMT\r\n< Content-Length: 283\r\n< Content-Type: text/plain; charset=utf-8\r\n<\r\nYou can create local variables for the pipelines within the template by\r\npreﬁxing the variable name with a “$\" sign. Variable names have to be\r\ncomposed of alphanumeric characters and the underscore. In the example\r\nbelow I have used a few variations that work for variable names.\r\n\r\n```\r\n\r\n# License\r\n\r\nOpenOCR is Open Source and available under the Apache 2 License.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}